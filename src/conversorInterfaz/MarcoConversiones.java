package conversorInterfaz;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class MarcoConversiones extends javax.swing.JFrame {

    Panel2 temp = new Panel2();
    Panel3 vel = new Panel3();
    Panel4 masa = new Panel4();

    public MarcoConversiones() {
        initComponents();
        campo2.setEditable(false);
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/convertirIcono.jpg")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        txtTitulo = new javax.swing.JLabel();
        cbxPrincipal = new javax.swing.JComboBox<>();
        panel1 = new javax.swing.JPanel();
        cbxMoneda = new javax.swing.JComboBox<>();
        campo2 = new javax.swing.JTextField();
        txtIgual = new javax.swing.JLabel();
        campo1 = new javax.swing.JTextField();
        btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor portatil");

        panelPrincipal.setBackground(new java.awt.Color(9, 33, 133));
        panelPrincipal.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 153, 153)));

        txtTitulo.setFont(new java.awt.Font("Sitka Display", 1, 28)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(255, 255, 255));
        txtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitulo.setText("Conversor de unidades");

        cbxPrincipal.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        cbxPrincipal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Divisas", "Temperatura", "Velocidad", "Masa" }));
        cbxPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbxPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPrincipalActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(9, 33, 133));
        panel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panel1.setEnabled(false);
        panel1.setPreferredSize(new java.awt.Dimension(411, 156));

        cbxMoneda.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        cbxMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Convertir de COP a USD", "Convertir de COP a EUR", "Convertir de COP a GBP", "Convertir de COP a JPY", "Convertir de COP a KRW", "Convertir de USD a COP", "Convertir de EUR a COP", "Convertir de GBP a COP", "Convertir de JPY a COP", "Convertir de KRW a COP" }));
        cbxMoneda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbxMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMonedaActionPerformed(evt);
            }
        });

        campo2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtIgual.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtIgual.setForeground(new java.awt.Color(255, 255, 255));
        txtIgual.setText("->");

        campo1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        campo1.setText("1");

        btn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        btn.setText("Convertir");
        btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxMoneda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(campo1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIgual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campo2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(cbxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campo1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campo2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxPrincipal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(txtTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbxPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPrincipalActionPerformed

        if ("Temperatura".equals(cbxPrincipal.getSelectedItem().toString())) {
            panel1.setVisible(false);
            vel.setVisible(false);
            masa.setVisible(false);
            temp.setVisible(true);
            temp.setBounds(44, 112, 420, 160);
            panelPrincipal.add(temp);
        } else if ("Divisas".equals(cbxPrincipal.getSelectedItem().toString())) {
            panel1.setVisible(true);
            temp.setVisible(false);
            vel.setVisible(false);
            masa.setVisible(false);
        } else if ("Velocidad".equals(cbxPrincipal.getSelectedItem().toString())) {
            vel.setVisible(true);
            temp.setVisible(false);
            panel1.setVisible(false);
            masa.setVisible(false);
            vel.setBounds(44, 112, 420, 160);
            panelPrincipal.add(vel);
        } else if ("Masa".equals(cbxPrincipal.getSelectedItem().toString())) {
            masa.setVisible(true);
            temp.setVisible(false);
            vel.setVisible(false);
            panel1.setVisible(false);
            masa.setBounds(44, 112, 420, 160);
            panelPrincipal.add(masa);
        }

    }//GEN-LAST:event_cbxPrincipalActionPerformed

    private void cbxMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMonedaActionPerformed

    }//GEN-LAST:event_cbxMonedaActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed
        if (!campo1.getText().trim().matches("[0-9]*")) {
            JOptionPane.showMessageDialog(null, "Solo se permiten numeros");
        } else if (campo1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el valor que quiere convertir");
        } else {
            double x = Double.parseDouble(campo1.getText());
            double tasaRC;

            switch (cbxMoneda.getSelectedItem().toString()) {
                case "Convertir de COP a USD" -> {
                    tasaRC = x / 4005;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de COP a EUR" -> {
                    tasaRC = x / 4619.39;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de COP a GBP" -> {
                    tasaRC = x / 5422.69;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de COP a JPY" -> {
                    tasaRC = x / 29.98;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de COP a KRW" -> {
                    tasaRC = x / 3.25;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de USD a COP" -> {
                    tasaRC = 4005 * x;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de EUR a COP" -> {
                    tasaRC = 4619.39 * x;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de GBP a COP" -> {
                    tasaRC = 5422.69 * x;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de JPY a COP" -> {
                    tasaRC = 29.98 * x;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                case "Convertir de KRW a COP" -> {
                    tasaRC = 3.25 * x;
                    campo2.setText(String.valueOf(String.format("%.2f", tasaRC)));
                }
                default -> {
                }
            }

        }

    }//GEN-LAST:event_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn;
    private javax.swing.JTextField campo1;
    private javax.swing.JTextField campo2;
    private javax.swing.JComboBox<String> cbxMoneda;
    private javax.swing.JComboBox<String> cbxPrincipal;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JLabel txtIgual;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables
}
